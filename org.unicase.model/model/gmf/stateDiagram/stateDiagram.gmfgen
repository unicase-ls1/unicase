<?xml version="1.0" encoding="UTF-8"?>
<gmfgen:GenEditorGenerator xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:gmfgen="http://www.eclipse.org/gmf/2009/GenModel" packageNamePrefix="org.unicase.ui.diagram.stateDiagram"
    modelID="State"
    diagramFileExtension="State_diagram"
    dynamicTemplates="true"
    templateDirectory="/org.unicase.model/model/gmf/templates/codegen/"
    copyrightText="&lt;copyright> Copyright (c) 2015-2016 Chair of Applied Software Engineering, Technische Universität München (TUM).&#xD;&#xA;All rights reserved. This program and the accompanying materials are made available under the terms of&#xD;&#xA;the Eclipse Public License v1.0 which accompanies this distribution,&#xD;&#xA;and is available at http://www.eclipse.org/legal/epl-v10.html &lt;/copyright>">
  <diagram
      visualID="55"
      editPartClassName="MEDiagramEditPart"
      itemSemanticEditPolicyClassName="MEDiagramItemSemanticEditPolicy"
      canonicalEditPolicyClassName="MEDiagramCanonicalEditPolicy"
      iconProviderPriority="Low"
      validationProviderPriority="Low">
    <diagramRunTimeClass
        href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Diagram"/>
    <elementType
        xsi:type="gmfgen:MetamodelType"
        editHelperClassName="MEDiagramEditHelper"/>
    <viewmap
        xsi:type="gmfgen:FigureViewmap"
        figureQualifiedClassName="org.eclipse.draw2d.FreeformLayer"/>
    <domainDiagramElement
        href="../../model.genmodel#//model/diagram/StateDiagram"/>
    <topLevelNodes
        visualID="2001"
        editPartClassName="StateEditPart"
        itemSemanticEditPolicyClassName="StateItemSemanticEditPolicy"
        notationViewFactoryClassName="StateViewFactory"
        canonicalEditPolicyClassName="StateCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="StateGraphicalNodeEditPolicy"
        createCommandClassName="StateCreateCommand">
      <diagramRunTimeClass
          href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="StateEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="StateFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class StateFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureStateFigure_name; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureStateFigure_entryConditions; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureStateFigure_activities; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureStateFigure_exitConditions; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public StateFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;this.setLineWidth(1);&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.unicase.ui.unicasecommon.diagram.figures.ConfigurableRectangleFigure stateFigure_name0 = new org.unicase.ui.unicasecommon.diagram.figures.ConfigurableRectangleFigure();&#xA;&#xA;&#xA;&#xA;&#xA;stateFigure_name0.setBorders(&#xA;&quot;SEW&quot;);&#xA;&#xA;&#xA;&#xA;stateFigure_name0.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(stateFigure_name0);&#xA;&#xA;&#x9;org.unicase.ui.unicasecommon.diagram.figures.CenterLayout layoutStateFigure_name0 = new org.unicase.ui.unicasecommon.diagram.figures.CenterLayout();&#xA;&#xA;&#xA;&#x9;stateFigure_name0.setLayoutManager(layoutStateFigure_name0);&#xA;&#xA;&#xA;&#xA;fFigureStateFigure_name = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureStateFigure_name.setText(&quot;unnamed&quot;);&#xA;&#xA;fFigureStateFigure_name.setFont(FFIGURESTATEFIGURE_NAME_FONT);&#xA;&#xA;&#xA;&#xA;fFigureStateFigure_name.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;stateFigure_name0.add(fFigureStateFigure_name);&#xA;&#xA;&#xA;&#xA;&#xA;org.unicase.ui.unicasecommon.diagram.figures.ConfigurableRectangleFigure stateFigure_entryConditions0 = new org.unicase.ui.unicasecommon.diagram.figures.ConfigurableRectangleFigure();&#xA;&#xA;&#xA;&#xA;&#xA;stateFigure_entryConditions0.setBorders(&#xA;&quot;EW&quot;);&#xA;&#xA;&#xA;&#xA;stateFigure_entryConditions0.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(stateFigure_entryConditions0);&#xA;&#xA;&#x9;org.unicase.ui.diagram.stateDiagram.unicase.CenterLayout layoutStateFigure_entryConditions0 = new org.unicase.ui.diagram.stateDiagram.unicase.CenterLayout();&#xA;&#xA;&#xA;&#x9;stateFigure_entryConditions0.setLayoutManager(layoutStateFigure_entryConditions0);&#xA;&#xA;&#xA;&#xA;fFigureStateFigure_entryConditions = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureStateFigure_entryConditions.setText(&quot;&quot;);&#xA;&#xA;fFigureStateFigure_entryConditions.setFont(FFIGURESTATEFIGURE_ENTRYCONDITIONS_FONT);&#xA;&#xA;&#xA;&#xA;fFigureStateFigure_entryConditions.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;stateFigure_entryConditions0.add(fFigureStateFigure_entryConditions);&#xA;&#xA;&#xA;&#xA;&#xA;org.unicase.ui.unicasecommon.diagram.figures.ConfigurableRectangleFigure stateFigure_activities0 = new org.unicase.ui.unicasecommon.diagram.figures.ConfigurableRectangleFigure();&#xA;&#xA;&#xA;&#xA;&#xA;stateFigure_activities0.setBorders(&#xA;&quot;EW&quot;);&#xA;&#xA;&#xA;&#xA;stateFigure_activities0.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(stateFigure_activities0);&#xA;&#xA;&#x9;org.unicase.ui.diagram.stateDiagram.unicase.CenterLayout layoutStateFigure_activities0 = new org.unicase.ui.diagram.stateDiagram.unicase.CenterLayout();&#xA;&#xA;&#xA;&#x9;stateFigure_activities0.setLayoutManager(layoutStateFigure_activities0);&#xA;&#xA;&#xA;&#xA;fFigureStateFigure_activities = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureStateFigure_activities.setText(&quot;&quot;);&#xA;&#xA;fFigureStateFigure_activities.setFont(FFIGURESTATEFIGURE_ACTIVITIES_FONT);&#xA;&#xA;&#xA;&#xA;fFigureStateFigure_activities.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;stateFigure_activities0.add(fFigureStateFigure_activities);&#xA;&#xA;&#xA;&#xA;&#xA;org.unicase.ui.unicasecommon.diagram.figures.ConfigurableRectangleFigure stateFigure_exitConditions0 = new org.unicase.ui.unicasecommon.diagram.figures.ConfigurableRectangleFigure();&#xA;&#xA;&#xA;&#xA;&#xA;stateFigure_exitConditions0.setBorders(&#xA;&quot;EW&quot;);&#xA;&#xA;&#xA;&#xA;stateFigure_exitConditions0.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(stateFigure_exitConditions0);&#xA;&#xA;&#x9;org.unicase.ui.diagram.stateDiagram.unicase.CenterLayout layoutStateFigure_exitConditions0 = new org.unicase.ui.diagram.stateDiagram.unicase.CenterLayout();&#xA;&#xA;&#xA;&#x9;stateFigure_exitConditions0.setLayoutManager(layoutStateFigure_exitConditions0);&#xA;&#xA;&#xA;&#xA;fFigureStateFigure_exitConditions = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureStateFigure_exitConditions.setText(&quot;&quot;);&#xA;&#xA;fFigureStateFigure_exitConditions.setFont(FFIGURESTATEFIGURE_EXITCONDITIONS_FONT);&#xA;&#xA;&#xA;&#xA;fFigureStateFigure_exitConditions.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;stateFigure_exitConditions0.add(fFigureStateFigure_exitConditions);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureStateFigure_name() {&#xA;&#x9;&#x9;return fFigureStateFigure_name;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureStateFigure_entryConditions() {&#xA;&#x9;&#x9;return fFigureStateFigure_entryConditions;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureStateFigure_activities() {&#xA;&#x9;&#x9;return fFigureStateFigure_activities;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureStateFigure_exitConditions() {&#xA;&#x9;&#x9;return fFigureStateFigure_exitConditions;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURESTATEFIGURE_NAME_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURESTATEFIGURE_ENTRYCONDITIONS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURESTATEFIGURE_ACTIVITIES_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURESTATEFIGURE_EXITCONDITIONS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;"/>
      <modelFacet>
        <metaClass
            href="../../model.genmodel#//model/state/State"/>
        <containmentMetaFeature
            href="../../model.genmodel#//model/diagram/MEDiagram/newElements"/>
        <childMetaFeature
            href="../../model.genmodel#//model/diagram/MEDiagram/elements"/>
      </modelFacet>
      <labels
          visualID="5001"
          editPartClassName="StateNameEditPart"
          itemSemanticEditPolicyClassName="StateNameItemSemanticEditPolicy"
          notationViewFactoryClassName="StateNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureStateFigure_name"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            viewPattern="">
          <metaFeatures
              href="../../model.genmodel#//model/UnicaseModelElement/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5002"
          editPartClassName="StateEntryConditionsEditPart"
          itemSemanticEditPolicyClassName="StateEntryConditionsItemSemanticEditPolicy"
          notationViewFactoryClassName="StateEntryConditionsViewFactory">
        <diagramRunTimeClass
            href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureStateFigure_entryConditions"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            viewPattern="ENTRY/{0}"
            editorPattern="{0}"
            editPattern="{0}">
          <metaFeatures
              href="../../model.genmodel#//model/state/State/entryConditions"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5003"
          editPartClassName="StateActivitiesEditPart"
          itemSemanticEditPolicyClassName="StateActivitiesItemSemanticEditPolicy"
          notationViewFactoryClassName="StateActivitiesViewFactory">
        <diagramRunTimeClass
            href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureStateFigure_activities"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            viewPattern="DO/{0}"
            editorPattern="{0}"
            editPattern="{0}">
          <metaFeatures
              href="../../model.genmodel#//model/state/State/activities"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5004"
          editPartClassName="StateExitConditionsEditPart"
          itemSemanticEditPolicyClassName="StateExitConditionsItemSemanticEditPolicy"
          notationViewFactoryClassName="StateExitConditionsViewFactory">
        <diagramRunTimeClass
            href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureStateFigure_exitConditions"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            viewPattern="EXIT/{0}"
            editorPattern="{0}"
            editPattern="{0}">
          <metaFeatures
              href="../../model.genmodel#//model/state/State/exitConditions"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2002"
        editPartClassName="StateInitialEditPart"
        itemSemanticEditPolicyClassName="StateInitialItemSemanticEditPolicy"
        notationViewFactoryClassName="StateInitialViewFactory"
        canonicalEditPolicyClassName="StateInitialCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="StateInitialGraphicalNodeEditPolicy"
        createCommandClassName="StateInitialCreateCommand">
      <diagramRunTimeClass
          href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="StateInitialEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="StateInitialFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class StateInitialFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public StateInitialFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setLineWidth(1);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(15)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(15)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(15)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedBackground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="15"
            height="15"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../model.genmodel#//model/state/StateInitial"/>
        <containmentMetaFeature
            href="../../model.genmodel#//model/diagram/MEDiagram/newElements"/>
        <childMetaFeature
            href="../../model.genmodel#//model/diagram/MEDiagram/elements"/>
      </modelFacet>
    </topLevelNodes>
    <topLevelNodes
        visualID="2003"
        editPartClassName="StateEndEditPart"
        itemSemanticEditPolicyClassName="StateEndItemSemanticEditPolicy"
        notationViewFactoryClassName="StateEndViewFactory"
        canonicalEditPolicyClassName="StateEndCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="StateEndGraphicalNodeEditPolicy"
        createCommandClassName="StateEndCreateCommand">
      <diagramRunTimeClass
          href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="StateEndEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="StateFinalFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class StateFinalFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public StateFinalFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.unicase.ui.unicasecommon.diagram.figures.CenterLayout layoutThis = new org.unicase.ui.unicasecommon.diagram.figures.CenterLayout();&#xA;&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setLineWidth(1);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(23)&#xA;, getMapMode().DPtoLP(23)&#xA;));&#xA;this.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(23)&#xA;, getMapMode().DPtoLP(23)&#xA;));&#xA;this.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(23)&#xA;, getMapMode().DPtoLP(23)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.Ellipse stateFinalFigure_inner0 = new org.eclipse.draw2d.Ellipse();&#xA;stateFinalFigure_inner0.setLineWidth(1);&#xA;&#x9;stateFinalFigure_inner0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;stateFinalFigure_inner0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(15)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;stateFinalFigure_inner0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(15)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;stateFinalFigure_inner0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(15)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;&#xA;this.add(stateFinalFigure_inner0);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="23"
            height="23"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../model.genmodel#//model/state/StateEnd"/>
        <containmentMetaFeature
            href="../../model.genmodel#//model/diagram/MEDiagram/newElements"/>
        <childMetaFeature
            href="../../model.genmodel#//model/diagram/MEDiagram/elements"/>
      </modelFacet>
    </topLevelNodes>
    <links
        visualID="4001"
        editPartClassName="TransitionEditPart"
        itemSemanticEditPolicyClassName="TransitionItemSemanticEditPolicy"
        notationViewFactoryClassName="TransitionViewFactory"
        createCommandClassName="TransitionCreateCommand"
        reorientCommandClassName="TransitionReorientCommand">
      <diagramRunTimeClass
          href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="TransitionEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="TransitionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class TransitionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransitionFigure_name; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public TransitionFigure() {&#xA;&#x9;&#x9;this.setLineWidth(1);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureTransitionFigure_name = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureTransitionFigure_name.setText(&quot;unnamed&quot;);&#xA;&#xA;this.add(fFigureTransitionFigure_name);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;df.setLineWidth(1);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransitionFigure_name() {&#xA;&#x9;&#x9;return fFigureTransitionFigure_name;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="../../model.genmodel#//model/state/Transition"/>
        <containmentMetaFeature
            href="../../model.genmodel#//model/diagram/MEDiagram/newElements"/>
        <childMetaFeature
            href="../../model.genmodel#//model/diagram/MEDiagram/newElements"/>
        <sourceMetaFeature
            href="../../model.genmodel#//model/state/Transition/source"/>
        <targetMetaFeature
            href="../../model.genmodel#//model/state/Transition/target"/>
      </modelFacet>
      <labels
          visualID="6001"
          editPartClassName="TransitionConditionNameEditPart"
          itemSemanticEditPolicyClassName="TransitionConditionNameItemSemanticEditPolicy"
          notationViewFactoryClassName="TransitionConditionNameViewFactory">
        <diagramRunTimeClass
            href="../../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureTransitionFigure_name"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            viewPattern=""
            editPattern="">
          <metaFeatures
              href="../../model.genmodel#//model/state/Transition/condition"/>
          <metaFeatures
              href="../../model.genmodel#//model/UnicaseModelElement/name"/>
        </modelFacet>
      </labels>
    </links>
    <palette>
      <groups
          title="Default"
          description="Holds top-level non-container tools">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="State"
            genNodes="//@diagram/@topLevelNodes.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Transition"
            genLinks="//@diagram/@links.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="State Initial Node"
            genNodes="//@diagram/@topLevelNodes.1"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="State Final Node"
            genNodes="//@diagram/@topLevelNodes.2"/>
      </groups>
    </palette>
    <preferencePages
        xsi:type="gmfgen:GenStandardPreferencePage"
        iD="org.unicase.diagram.general"
        name="Model Diagram">
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.unicase.diagram.appearance"
          name="Appearance"
          kind="Appearance"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.unicase.diagram.connections"
          name="Connections"
          kind="Connections"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.unicase.diagram.printing"
          name="Printing"
          kind="Printing"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.unicase.diagram.rulersAndGrid"
          name="Rulers And Grid"
          kind="RulersAndGrid"/>
    </preferencePages>
  </diagram>
  <plugin
      iD="org.unicase.ui.diagram.stateDiagram"
      provider="unicase.org">
    <requiredPlugins>org.eclipse.draw2d</requiredPlugins>
    <requiredPlugins>org.eclipse.gmf.runtime.draw2d.ui</requiredPlugins>
    <requiredPlugins>org.unicase.ui.unicasecommon</requiredPlugins>
  </plugin>
  <editor/>
  <navigator>
    <childReferences
        child="//@diagram"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.0"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.1"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.2"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.0"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.0"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.1"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.2"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.2"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.1"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.2"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.2"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
  </navigator>
  <diagramUpdater/>
  <propertySheet>
    <tabs
        xsi:type="gmfgen:GenCustomPropertyTab"
        iD="domain"
        label="Core">
      <filter
          xsi:type="gmfgen:TypeTabFilter">
        <types>org.eclipse.gmf.runtime.notation.View</types>
        <types>org.eclipse.gef.EditPart</types>
        <generatedTypes>abstractNavigatorItem</generatedTypes>
      </filter>
    </tabs>
  </propertySheet>
  <domainGenModel
      href="../../model.genmodel#/"/>
  <labelParsers
      extensibleViaService="true">
    <implementations
        xsi:type="gmfgen:PredefinedParser"
        uses="//@diagram/@topLevelNodes.0/@labels.0/@modelFacet //@diagram/@topLevelNodes.0/@labels.1/@modelFacet //@diagram/@topLevelNodes.0/@labels.2/@modelFacet //@diagram/@topLevelNodes.0/@labels.3/@modelFacet //@diagram/@links.0/@labels.0/@modelFacet"/>
  </labelParsers>
  <contextMenus
      context="//@diagram">
    <items
        xsi:type="gmfgen:LoadResourceAction"/>
  </contextMenus>
</gmfgen:GenEditorGenerator>
